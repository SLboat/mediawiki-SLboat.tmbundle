<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>command</key>
	<string>#! /usr/bin/osascript

-- todo:输出一个注释，已经转移到了？
-- todo:连续按的时候可能会死掉呢

-- 森亮号音频见识制造 - iTunes 强制到达下一首

-- 先暂停好了
pause()

-- 强制关闭重复模式-关闭
waitfor_setRepeatType("关闭")

-- 进入下一首，这时候看起来可以了
nextSong()

-- 强制恢复到单曲
if not waitfor_setRepeatType("单曲") then
	return ("尝试下一首发生意外，真不幸！")
end if

play()

-- 提示工作完成了
return ("已跳到下一个音频见识：" &amp; getCurrentTrackName())

-- 支持库这是：
(* 来自伟大的regulus6633,http://stackoverflow.com/questions/14674517/how-to-set-itunes-11-in-shuffle-or-repeat-mode-via-applescript
-- 用于兼容iTunes 11的不能获取问题
*)
-- 利用菜单的方式来获得重复模式类型，这在iTunes 11上行得通
on getRepeatType() -- the return value is a string: Off/All/One
	tell application "System Events"
		tell process "iTunes"
			set menuItems to menu items of menu bar 1's menu bar item "控制"'s menu 1's menu item "重复"'s menu 1
			set currentChoice to "未知"
			repeat with anItem in menuItems
				try
					set theResult to value of attribute "AXMenuItemMarkChar" of anItem
					if theResult is "✓" then
						set currentChoice to name of anItem
						exit repeat
					end if
				end try
			end repeat
		end tell
	end tell
	return currentChoice
end getRepeatType

-- 通过菜单的方式来设置重复模式，这在iTunes也行得通，而且是很佳的做法
on setRepeatType(repeatType) -- 重复模式是一个字符串: 关闭/全部/单曲
	set currentValue to my getRepeatType()
	ignoring case
		if currentValue is not repeatType then
			tell application "System Events" to tell process "iTunes"'s menu bar 1's menu bar item "控制"'s menu 1's menu item "重复"'s menu 1
				log "get the message from system events"
				if repeatType is "全部" then
					perform action "AXPress" of menu item "全部"
				else if repeatType is "单曲" then
					perform action "AXPress" of menu item "单曲"
				else
					perform action "AXPress" of menu item "关闭"
				end if
				log "done work with menus of itunes now"
			end tell
		end if
	end ignoring
end setRepeatType

on waitfor_setRepeatType(repeatType)
	-- 最大时间五秒
	set max_wait_time to 3
	set startTime to (get current date)
	--最长等待五秒
	-- 强制关闭重复模式-repeatType
	repeat until (getRepeatType() = repeatType)
		setRepeatType(repeatType)
		--delay (0.1)
		--评测时间
		set endTime to (get current date)
		set duration to endTime - startTime
		--检查时间
		if duration &gt; max_wait_time then
			--超时终止
			exit repeat
		end if
	end repeat
	--返回是否一致
	return (getRepeatType() = repeatType)
end waitfor_setRepeatType

-- 暂停
on pause()
	tell application "iTunes"
		pause
	end tell
end pause

-- 去往下一首
on nextSong()
	tell application "iTunes"
		next track
	end tell
end nextSong

-- 播放
on play()
	tell application "iTunes"
		play
	end tell
end play

-- 获得当前曲目的名称
on getCurrentTrackName()
	tell application "iTunes"
		try
			return (the name of current track) &amp; ".MP3"
		on error
			return "看起来没有跳转成功"
		end try
	end tell
end getCurrentTrackName</string>
	<key>input</key>
	<string>selection</string>
	<key>inputFormat</key>
	<string>text</string>
	<key>keyEquivalent</key>
	<string>^/</string>
	<key>name</key>
	<string>iTunes 下一首</string>
	<key>outputCaret</key>
	<string>afterOutput</string>
	<key>outputFormat</key>
	<string>text</string>
	<key>outputLocation</key>
	<string>toolTip</string>
	<key>scope</key>
	<string>text.html.mediawiki</string>
	<key>tabTrigger</key>
	<string>next</string>
	<key>uuid</key>
	<string>3964D9FD-89DE-4058-985B-EB5EC86C7660</string>
	<key>version</key>
	<integer>2</integer>
</dict>
</plist>
