<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>command</key>
	<string>#! /usr/bin/osascript
 
-- 森亮号音频见识制造 - iTunes 强制到达下一首

-- 记下最后的重复模式
set last_Repeat to getRepeatType()

-- 强制关闭重复模式-关闭
setRepeatType("关闭")

-- 等待一会
delay (0.5)

-- 进入下一首，这时候看起来可以了
nextSong()

-- 稍等一会
delay (0.5)

-- 强制恢复到单曲
setRepeatType("单曲")

-- 还原到最后一次的重复模式-恢复
-- setRepeatType(last_Repeat)

-- 支持库这是：
(* 来自伟大的regulus6633,http://stackoverflow.com/questions/14674517/how-to-set-itunes-11-in-shuffle-or-repeat-mode-via-applescript
-- 用于兼容iTunes 11的不能获取问题
*)
-- 利用菜单的方式来获得重复模式类型，这在iTunes 11上行得通
on getRepeatType() -- the return value is a string: Off/All/One
	tell application "System Events"
		tell process "iTunes"
			set menuItems to menu items of menu bar 1's menu bar item "控制"'s menu 1's menu item "重复"'s menu 1
			set currentChoice to "unknown"
			repeat with anItem in menuItems
				try
					set theResult to value of attribute "AXMenuItemMarkChar" of anItem
					if theResult is not "" then
						set currentChoice to name of anItem
						exit repeat
					end if
				end try
			end repeat
		end tell
	end tell
	return currentChoice
end getRepeatType

-- 通过菜单的方式来设置重复模式，这在iTunes也行得通，而且是很佳的做法
on setRepeatType(repeatType) -- 重复模式是一个字符串: 关闭/全部/单曲
	set currentValue to my getRepeatType()
	ignoring case
		if currentValue is not repeatType then
			tell application "System Events" to tell process "iTunes"'s menu bar 1's menu bar item "控制"'s menu 1's menu item "重复"'s menu 1
				if repeatType is "全部" then
					perform action "AXPress" of menu item "全部"
				else if repeatType is "单曲" then
					perform action "AXPress" of menu item "单曲"
				else
					perform action "AXPress" of menu item "关闭"
				end if
			end tell
		end if
	end ignoring
end setRepeatType

-- 去往下一首
on nextSong()
	tell application "iTunes"
		next track
	end tell
end nextSong

-- 获得当前曲目的名称
on getCurrentTrackName()
	tell application "iTunes"
		log "当前的音频见识是：" &amp; (the name of current track)
	end tell
end getCurrentTrackName


</string>
	<key>input</key>
	<string>selection</string>
	<key>inputFormat</key>
	<string>text</string>
	<key>name</key>
	<string>iTunes 下一首</string>
	<key>outputCaret</key>
	<string>afterOutput</string>
	<key>outputFormat</key>
	<string>text</string>
	<key>outputLocation</key>
	<string>discard</string>
	<key>uuid</key>
	<string>3964D9FD-89DE-4058-985B-EB5EC86C7660</string>
	<key>version</key>
	<integer>2</integer>
</dict>
</plist>
